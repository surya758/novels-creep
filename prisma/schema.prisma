// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String     @id @default(cuid())
  name     String?
  email    String?    @unique
  image    String?
  bookmark Book[]
  comments Comment[]
  reviews  Review[]
  Reaction Reaction[]
}

model Book {
  id           String    @id @default(cuid())
  title        String
  description  String
  tags         String[]
  comments     Comment[]
  reviews      Review[]
  chapters     Chapter[]
  bookmarkedBy User[]
}

model Chapter {
  id      String    @id @default(cuid())
  title   String
  content String
  book    Book      @relation(fields: [bookId], references: [id])
  bookId  String
  comment Comment[]
}

model Comment {
  id        String     @id @default(cuid())
  content   String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  book      Book       @relation(fields: [bookId], references: [id])
  bookId    String
  reactions Reaction[]
  chapter   Chapter?   @relation(fields: [chapterId], references: [id])
  chapterId String?
}

model Review {
  id      String @id @default(cuid())
  content String
  rating  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  book    Book   @relation(fields: [bookId], references: [id])
  bookId  String
}

model Reaction {
  id        String  @id @default(cuid())
  type      String // e.g., "like", "love", "laugh"
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId String
}
